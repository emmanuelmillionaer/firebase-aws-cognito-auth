{
  "name": "ecdsa-sig-formatter",
  "version": "1.0.5",
  "description": "Translate ECDSA signatures between ASN.1/DER and JOSE-style concatenation",
  "main": "src/ecdsa-sig-formatter.js",
  "scripts": {
    "check-style": "eslint .",
    "pretest": "npm run check-style",
    "test": "istanbul cover --root src _mocha -- spec",
    "report-cov": "cat ./coverage/lcov.info | coveralls"
  },
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/Brightspace/node-ecdsa-sig-formatter.git"
  },
  "keywords": [
    "ecdsa",
    "der",
    "asn.1",
    "jwt",
    "jwa",
    "jsonwebtoken",
    "jose"
  ],
  "author": {
    "name": "D2L Corporation"
  },
  "license": "Apache-2.0",
  "bugs": {
    "url": "https://github.com/Brightspace/node-ecdsa-sig-formatter/issues"
  },
  "homepage": "https://github.com/Brightspace/node-ecdsa-sig-formatter#readme",
  "dependencies": {
    "base64-url": "^1.2.1"
  },
  "devDependencies": {
    "bench": "^0.3.6",
    "chai": "^3.4.1",
    "coveralls": "^2.11.6",
    "elliptic": "^6.1.0",
    "eslint": "^1.10.3",
    "eslint-config-brightspace": "^0.1.0",
    "istanbul": "^0.4.2",
    "jwk-to-pem": "^1.2.4",
    "mocha": "^2.3.4"
  },
  "readme": "# ecdsa-sig-formatter\n\n[![Build Status](https://travis-ci.org/Brightspace/node-ecdsa-sig-formatter.svg?branch=master)](https://travis-ci.org/Brightspace/node-ecdsa-sig-formatter) [![Coverage Status](https://coveralls.io/repos/Brightspace/node-ecdsa-sig-formatter/badge.svg)](https://coveralls.io/r/Brightspace/node-ecdsa-sig-formatter)\n\nTranslate between JOSE and ASN.1/DER encodings for ECDSA signatures\n\n## Install\n```sh\nnpm install ecdsa-sig-formatter --save\n```\n\n## Usage\n```js\nvar format = require('ecdsa-sig-formatter');\n\nvar derSignature = '..'; // asn.1/DER encoded ecdsa signature\n\nvar joseSignature = format.derToJose(derSignature);\n\n```\n\n### API\n\n---\n\n#### `.derToJose(Buffer|String signature, String alg)` -> `String`\n\nConvert the ASN.1/DER encoded signature to a JOSE-style concatenated signature.\nReturns a _base64 url_ encoded `String`.\n\n* If _signature_ is a `String`, it should be _base64_ encoded\n* _alg_ must be one of _ES256_, _ES384_ or _ES512_\n\n---\n\n#### `.joseToDer(Buffer|String signature, String alg)` -> `Buffer`\n\nConvert the JOSE-style concatenated signature to an ASN.1/DER encoded\nsignature. Returns a `Buffer`\n\n* If _signature_ is a `String`, it should be _base64 url_ encoded\n* _alg_ must be one of _ES256_, _ES384_ or _ES512_\n\n## Contributing\n\n1. **Fork** the repository. Committing directly against this repository is\n   highly discouraged.\n\n2. Make your modifications in a branch, updating and writing new unit tests\n   as necessary in the `spec` directory.\n\n3. Ensure that all tests pass with `npm test`\n\n4. `rebase` your changes against master. *Do not merge*.\n\n5. Submit a pull request to this repository. Wait for tests to run and someone\n   to chime in.\n\n### Code Style\n\nThis repository is configured with [EditorConfig][EditorConfig] and\n[ESLint][ESLint] rules.\n\n[EditorConfig]: http://editorconfig.org/\n[ESLint]: http://eslint.org\n",
  "readmeFilename": "README.md",
  "_id": "ecdsa-sig-formatter@1.0.5",
  "_shasum": "0d0f32b638611f6b8f36ffd305a3e512ea5444e6",
  "_resolved": "https://registry.npmjs.org/ecdsa-sig-formatter/-/ecdsa-sig-formatter-1.0.5.tgz",
  "_from": "https://registry.npmjs.org/ecdsa-sig-formatter/-/ecdsa-sig-formatter-1.0.5.tgz"
}
